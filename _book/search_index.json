[["index.html", "R Table &amp; Plot Gallery About", " R Table &amp; Plot Gallery Hao Sun 2023-03-30 About This bookdown includes some interesting table and figure examples. It can be used as a manual of ggplot2, DT, plotly. "],["notes-for-ggplot2.html", "Chapter 1 Notes for ggplot2", " Chapter 1 Notes for ggplot2 guides: fill = guide_legend(title = NULL): remove legend title fill = guide_legend(nrow=4, byrow=TRUE); put the legends into 4 rows theme: legend.position='none': hide legend legend.position='bottom': put legend at the bottom axis.title.x = element_blank(): remove x axis name (or use xlab()) axis.text.x = element_text(angle = 45): adjust x axis text angle axis.text.x = element_blank(): remove labels on x axis axis.text.x = element_text(color = c(\"red\")): change label colors on x axis plot.title = element_text(hjust = 0.5): center title text=element_text(size=15): change font size use base_size = 15 in theme_xx() use family = \"xxx\" to change font family scale_color_manual: modify legends values: change color labels: change legends labels name: change legend title scale_x_continuous: change breaks and range of x axis break: set breaks limits: set range stat_function: add function curve stat_function(color = &#39;blue&#39;, fun=dunif, args=list(0,1),size=1.2) geom_segment: segment plot ggplot(d2, aes(x = lower, #横向线段 xend = upper, y = county, yend = county))+ geom_segment(lwd=1, alpha=0.5) + labs(x=&#39;mean&#39;, y=&quot;county&quot;, title=&#39;95% Credible Intervals&#39;) + scale_color_brewer(palette=&#39;Set1&#39;) + scale_y_reverse() + theme_bw() Remark: change segment line type, color and width: - scale_linetype_manual(values=c(\"twodash\", \"dotted\")) #（\"solid\", \"twodash\", \"dotted\", \"longdash\", \"dotdash\", \"dashed\", \"blank\") - scale_color_manual(values=c('#999999','#E69F00')) - scale_size_manual(values=c(1, 1.5)) ggpubr::ggarrange(p1, p2, ..., ncol = ): plot multiple ggplots in one figure Or gridExtra::grid.arrange(..., ncol = ) Or require(cowplot) myplots = vector(&quot;list&quot;, n) myplot[[i]]&lt;- ggplot(...) plot_grid(plotlist=myplots) Or require(grid) grid.newpage() #新建图表版面 pushViewport(viewport(layout = grid.layout(2,2))) #将版面分成2*2矩阵 vplayout &lt;- function(x,y){viewport(layout.pos.row = x, layout.pos.col = y)} print(chart3, vp = vplayout(1,1:2)) #将（1,1)和(1,2)的位置画图chart3 print(chart2, vp = vplayout(2,1)) #将(2,1)的位置画图chart2 print(chart1 , vp = vplayout(2,2)) #将（2,2)的位置画图chart1 scale_y_log10(): tale log of y axis geom_hline(), geom_vline(), geom_abline geom_hline(yintercept=25, color=&quot;orange&quot;, size=1) + geom_vline(xintercept=3, color=&quot;orange&quot;, size=1 geom_errorbar(): boxplot or scatterplot add confidence interval geom_errorbar(aes(ymin = mean_gain-1.96*sd_gain, ymax = mean_gain+1.96*sd_gain, colour = Diet), data = ChickError) forcats::fct_inorder: Reorder factor levels by first appearance, frequency, or numeric order a = factor(rep(c(&quot;Roads&quot;, &quot;Canals&quot;, &quot;Early railways&quot;, &quot;Railways&quot;), each = 3)) a %&gt;% forcats::fct_inorder() %&gt;% levels() ## [1] &quot;Roads&quot; &quot;Canals&quot; &quot;Early railways&quot; &quot;Railways&quot; "],["r-plot-gallery.html", "Chapter 2 R plot gallery", " Chapter 2 R plot gallery Contents Multiple 95% Confidence Intervals Line Chart Boxplot with Regression Result Pirate Plot Beeswarm Plot Bar Plot Multi-row x-axis labels Calender Correlation Plot Survival Analysis Table Visualization Heatmap Compare Two Group Means Add p-value Missing Data in Time Series State Map with Fill-in Color Animiation Plot Dumbbell Chart Encircle Points Multiple 95% Confidence Intervals set.seed(123) data.frame(value = rnorm(12, mean = 0, sd = 0.05)) %&gt;% mutate(lower = value - runif(12, 0, 0.4), upper = value + runif(12, 0, 0.4), REG = rep(c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;), 3), est = mean(value), index = rep(1:3, each = 4)) %&gt;% ggplot(aes(x = lower, xend = upper, y = index + rep((0:(length(unique(REG))-1))/10, 3), yend = index + rep((0:(length(unique(REG))-1))/10, 3), color = REG)) + geom_segment(lwd = 1, alpha = 0.5) + scale_color_brewer(palette = &quot;Set1&quot;) + labs(y = &quot;&quot;, x = &quot;Reduction Rate&quot;) + scale_y_continuous(breaks = 1:3, labels = c(&quot;method 1&quot;, &quot;method 2&quot;, &quot;method 3&quot;)) + geom_segment(aes(x = est, xend = est, y = index - 0.1, yend = index + (length(unique(REG)))/10)) + geom_point(aes(x = value, y = index + rep((0:(length(unique(REG))-1))/10, 3))) + theme_bw() + ggtitle(&quot;Reduction Rate of Treatment Compared With Placebo&quot;) + theme(plot.title = element_text(hjust = 0.5), text= element_text(size = 15)) Line Chart tmp &lt;- data.frame(time = rep(2001:2020, 3), type = rep(c(&quot;Corn&quot;, &quot;Soybean&quot;, &quot;Rice&quot;), each = 20), value = c(cumsum(runif(20)), (1:20)/5 + cumsum(runif(20)), (1:20)/2 + cumsum(runif(20)))) ggplot(data = tmp, aes(y = value, x = time, group = type, shape = type, linetype = type)) + geom_point()+ geom_line()+ xlab(&quot;Year&quot;) + ylab(&quot;Price&quot;)+ theme_bw() + labs(group = &quot;type&quot;)+ theme(legend.title=element_blank(),legend.position=&quot;right&quot;) + geom_vline(aes(xintercept = 2016), color = &quot;red&quot;, linetype = &quot;dashed&quot;) Example 2 dat &lt;- data.frame(year = rep(2001:2021, 4), profit = rnorm(84, sd = 50) + c((1:21) * 5, (1:21) * 10, (1:21) * 15, (1:21) * 20), crop = rep(c(&quot;corn&quot;, &quot;rice&quot;, &quot;soybean&quot;, &quot;wheat&quot;), each = 21), impute = sample(c(TRUE, FALSE), size = 84, replace = T, prob = c(0.1, 0.9))) ggplot(data = dat, aes(y = profit, x = year, group = crop)) + geom_point(aes(color = interaction(crop, impute, sep = &quot;_&quot;), shape = impute), size = 2.5) + geom_line(aes(color = crop), size = 1) + xlab(&quot;Year&quot;) + ylab(&quot;Expected Profit&quot;) + labs(group = &quot;crop&quot;) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + theme(legend.title = element_blank(), legend.position = &quot;right&quot;) + scale_shape_discrete(name = &quot;&quot;, labels = c(&quot;Corn&quot;,&quot;Rice&quot;,&quot;Soybean&quot;, &quot;Wheat&quot;)) + geom_vline(aes(xintercept = 2016), color = &quot;red&quot;, linetype = &quot;dashed&quot;) + geom_hline(aes(yintercept = 0), color = &quot;grey&quot;) + scale_x_continuous(breaks = seq(2000, 2022, 5)) + scale_y_continuous(breaks = seq(-300, 1000, 200)) + scale_color_manual(name = &quot;&quot;, values = c(&quot;corn_FALSE&quot; = &quot;#E69F00&quot;, &quot;corn_TRUE&quot; = &quot;black&quot;, &quot;rice_FALSE&quot; = &quot;#56B4E9&quot;, &quot;rice_TRUE&quot; = &quot;black&quot;, &quot;soybean_FALSE&quot; = &quot;#009E73&quot;, &quot;soybean_TRUE&quot; = &quot;black&quot;, &quot;wheat_FALSE&quot; = &quot;purple&quot;, &quot;wheat_TRUE&quot; = &quot;black&quot;, &quot;corn&quot; = &quot;#E69F00&quot;, &quot;rice&quot; = &quot;#56B4E9&quot;, &quot;soybean&quot; = &quot;#009E73&quot;, &quot;wheat&quot; = &quot;purple&quot;), labels = c(&quot;Corn&quot;, &quot;Rice&quot;, &quot;Soybean&quot;, &quot;Wheat&quot;), breaks = c(&quot;corn_FALSE&quot;, &quot;rice_FALSE&quot;, &quot;soybean_FALSE&quot;, &quot;wheat_FALSE&quot;)) + guides(shape = &#39;none&#39;, # remove the shape legend color = guide_legend(override.aes = list( color = c(&quot;#E69F00&quot;, &quot;#56B4E9&quot;, &quot;#009E73&quot;, &quot;purple&quot;), size = 1, label = c(&quot;Corn&quot;, &quot;Rice&quot;, &quot;Soybean&quot;, &quot;Wheat&quot;) ))) + theme_bw() Boxplot with Regression Result d &lt;- Sleuth3::case1402 %&gt;% pivot_longer(Forrest:William, names_to = &quot;variety&quot;, values_to = &quot;yield&quot;) ggplot(d, aes(x = O3, y = yield, group = O3)) + geom_boxplot() + geom_point() + geom_smooth(method = lm, aes(group=1)) + scale_x_continuous(breaks = c(0, unique(d$O3))) + ggtitle(&quot;Yield vs O3&quot;) + xlab(&quot;O3&quot;) + ylab(&quot;&quot;) + theme(axis.text.y=element_blank(), axis.ticks.y=element_blank()) Pirate Plot require(yarrr) yarrr::pirateplot(weight ~ Diet, data = ChickWeight, main = &quot;Pirate plot&quot;, inf.method = &quot;ci&quot;, theme = 2, # change theme, from 1 to 4 pal = &quot;decision&quot;, # use piratepal(palette = &quot;all&quot;) to check available palettes bar.f.o = 0.2) Beeswarm plot require(ggbeeswarm) ggplot(iris, aes(Species, Sepal.Length, colour = Species)) + geom_violin(width = 0.5) + geom_beeswarm() + theme_classic() + scale_color_brewer(palette = &quot;Set1&quot;) Bar Plot dat2 &lt;- data.frame( categ = rep(c(&quot;Roads&quot;, &quot;Canals&quot;, &quot;Early railways&quot;, &quot;Railways&quot;), each = 3) %&gt;% forcats::fct_inorder(), group = rep(c(&quot;Maximum&quot;, &quot;Mean&quot;, &quot;Minimum&quot;), 4), fill = as.character(c(1,1,1,1,1,1, 2, 1, 3, 1,1,1)), pattern = c(rep(&quot;N&quot;, 6), &quot;D&quot;, rep(&quot;N&quot;, 5)), record = c(NA, 5, NA, 11.5, 3.77, 1.4, 14.3, 6, 2.3, NA, 1.4, NA) ) dat2 %&gt;% dplyr::filter(is.na(record) == FALSE) %&gt;% ggplot() + geom_bar_pattern(aes(x = categ, y = record, fill = fill, group = group, pattern = pattern), width=0.4, position = position_dodge2(width=0.5, preserve = &quot;single&quot;), color = &quot;black&quot;, stat = &quot;identity&quot;, pattern_density = 1.0, pattern_fill = &#39;grey&#39;, pattern_key_scale_factor = 0.5) + scale_fill_manual(values = c(&quot;#1B4264&quot;,&quot;#D3CEC7&quot;,&quot;#5A6065&quot;), labels = c(&quot;Mean&quot;, &quot;Maximum&quot;, &quot;Minimum&quot;)) + scale_pattern_manual(values = c(D = &quot;stripe&quot;, N = &quot;none&quot;), guide = &quot;none&quot;) + guides(fill = guide_legend(override.aes = list(pattern = &quot;none&quot;), title = NULL)) + scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10, 12, 14)) + labs(x = NULL, y = &quot;Pence&quot;) + theme_bw() + theme(text = element_text(size = 15), axis.text.y = element_text(angle = 30, hjust = 1)) getrank &lt;- function(data) { group &lt;- nrow(data)/4 rankvalue &lt;- NULL for(i in 1:group) { rankvalue &lt;- c(rankvalue, rank(ifelse(data$stat[i*4] %in% c(&quot;n_over&quot;, &quot;risk&quot;), 1, -1) * data$value[((i-1)*4+1):(i*4)], ties.method = &quot;min&quot;)) } data$rank &lt;- as.character(rankvalue) return(data) } data.frame(curve = rep(1:4, each = 4), design = rep(paste(&quot;D&quot;, 1:4, sep = &quot;&quot;), 4), correct = runif(16, max = 100), OBD = runif(16, max = 100), noOBD = runif(16, max = 100), risk = runif(16, max = 100)) %&gt;% gather(key = &quot;stat&quot;, value = &quot;value&quot;, -curve, -design) %&gt;% getrank() %&gt;% mutate_if(is.numeric, ~round(., 1)) %&gt;% mutate(ifbest = as.character(rank == &quot;1&quot;)) %&gt;% ggplot(aes(x = curve, y = value, fill = design, pattern = ifbest)) + geom_bar_pattern( width=0.75, position = position_dodge2(width=0.7, preserve = &quot;single&quot;), color = &quot;black&quot;, stat = &quot;identity&quot;, pattern_fill = NA, pattern_density = 1.0, pattern_key_scale_factor = 0.5) + scale_fill_manual(values = c(&quot;#EC8F76&quot;,&quot;#37BAEB&quot;, &quot;#A2E265&quot;,&quot;#E8EC76&quot; ), labels = c(&quot;D1&quot;, &quot;D2&quot;, &quot;D3&quot;, &quot;D4&quot;)) + scale_pattern_manual(values = c(&quot;TRUE&quot; = &quot;stripe&quot;, &quot;FALSE&quot; = &quot;none&quot;), guide = &quot;none&quot;) + guides(fill = guide_legend(override.aes = list(pattern = &quot;none&quot;), title = NULL)) + facet_wrap(~factor(stat, levels = c(&quot;OBD&quot;, &quot;noOBD&quot;, &quot;correct&quot;, &quot;risk&quot;)), nrow = 2, scales = &quot;free&quot;) + geom_text(aes(label=value), position=position_dodge(width=0.7), vjust=-0.25, size = 3) + theme_bw() conser &lt;- data.frame(type = rep(c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;), each = 3), ratio = c(0.1, 0.2, 0.7, 0.2, 0.3, 0.5, 0.3, 0.1, 0.6, 0.5, 0.2, 0.3), answer = rep(c(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;), 4)) conser %&gt;% ggplot( aes(x = type, y = ratio, fill = answer)) + geom_col(color = &quot;black&quot;, size = 0.2)+ theme_bw()+ xlab(&quot;&quot;) + ylab(&quot;Percent (%)&quot;) + theme(legend.title=element_blank(),legend.position=&quot;bottom&quot;) + scale_fill_manual(values = c(&quot;#AED6F1&quot;, &quot;#3498DB&quot;,&quot;#21618C&quot;), labels = c(&quot;Not Used&quot;, &quot;Not sure&quot;, &quot;Used&quot;))+ scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 10))+ theme(axis.text.x = element_text(size = 11)) Multi-row x-axis labels set.seed(1) df=data.frame(year=rep(2009:2013,each=4), quarter=rep(c(&quot;Q1&quot;,&quot;Q2&quot;,&quot;Q3&quot;,&quot;Q4&quot;),5), sales=40:59+rnorm(20,sd=5)) ggplot(data = df, aes(x = interaction(year, quarter, lex.order = TRUE), y = sales, group = 1)) + geom_line(colour = &quot;blue&quot;) + annotate(geom = &quot;text&quot;, x = seq_len(nrow(df)), y = 34, label = df$quarter, size = 4) + annotate(geom = &quot;text&quot;, x = 2.5 + 4 * (0:4), y = 32, label = unique(df$year), size = 6) + coord_cartesian(ylim = c(35, 65), expand = FALSE, clip = &quot;off&quot;) + theme_bw() + theme(plot.margin = unit(c(1, 1, 4, 1), &quot;lines&quot;), axis.title.x = element_blank(), axis.text.x = element_blank(), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank()) ggplot(mtcars, aes(wt, mpg)) + geom_point() + labs(x = paste0(&quot;&lt;span style=&#39;font-size: 11pt&#39;&gt;This is the axis of&lt;/span&gt;&lt;br&gt; &lt;span style=&#39;font-size: 7pt&#39;&gt;wt&lt;/span&gt;&quot;), y = paste0(&quot;&lt;span style=&#39;font-size: 11pt&#39;&gt;This is the axis of&lt;/span&gt;&lt;br&gt; &lt;span style=&#39;font-size: 7pt&#39;&gt;mpg&lt;/span&gt;&quot;)) + theme(axis.title.x = ggtext::element_markdown(), axis.title.y = ggtext::element_markdown()) Calendar require(sugrrants) require(lubridate) data.frame(date = lubridate::ymd(strtrim(seq(ISOdate(2017,10,1), ISOdate(2018,2,28), &quot;DSTday&quot;),10)), # or as.Date(&quot;2017-10-1&quot;) + 0:150 n = sample(1:100, size = 151, replace = T)) %&gt;% sugrrants::frame_calendar(x = 1, y = 1, date = date) %&gt;% ggplot(aes(x = .x, y = .y)) + ggtitle(&quot;Daily sold units&quot;) + theme_bw() + theme(legend.position = &quot;bottom&quot;, plot.title = element_text(hjust = 0.5)) + geom_tile(aes(x = .x+(1/13)/2, y = .y+(1/9)/2, fill = n), colour = &quot;grey50&quot;) + scale_fill_distiller(name = &quot;&quot;, palette = &quot;RdYlBu&quot;) -&gt; p2.sale sugrrants::prettify(p2.sale, label = c(&quot;label&quot;, &quot;text&quot;, &quot;text2&quot;)) # label: month and year; text: weekday at the bottom; text2: day of month Correlation Plot require(corrplot) cor(mtcars) %&gt;% corrplot::corrplot(., type = &quot;upper&quot;, order = &quot;hclust&quot;) Survival Analysis library(survival) library(survminer) surv_model &lt;- survfit(Surv(time, status) ~ sex, data = lung) p1 &lt;- ggsurvplot(surv_model, data = lung, conf.int = TRUE, # 添加置信区间 pval = TRUE, # 添加p值 (can customize pval) fun = &quot;pct&quot;, # 将y轴转变为百分比的格式 size = 1, # 修饰线条的粗细 linetype = &quot;strata&quot;, # 改变两条线条的类型 palette = c(&quot;lightseagreen&quot;, &quot;goldenrod1&quot;), # 改变两条曲线的颜色 legend = c(0.8, 0.85), # 改变legend的位置 legend.title = &quot;Gender&quot;, # 改变legend的题目 legend.labs = c(&quot;Male&quot;, &quot;Female&quot;), # 改变legend的标签 risk.table = TRUE, # add risk table tables.height = 0.2, tables.theme = theme_cleantable(), surv.median.line = &quot;hv&quot;, ggtheme = theme_bw()) p1$plot &lt;- p1$plot + annotate(&quot;text&quot;, x = 750, y = 70, # 注明x和y轴的位置 label = &quot;Chisq = 10.3 on 1 degrees of freedom&quot;) # 添加文本信息 p1 library(ggsurvfit) mymodel &lt;- survfit2(Surv(time, status) ~ surg, data = df_colon) ggsurvfit(mymodel) + add_confidence_interval() + # 添加置信区间 scale_color_manual(values = c(&#39;#54738E&#39;, &#39;#82AC7C&#39;)) + # 修改颜色 scale_fill_manual(values = c(&#39;#54738E&#39;, &#39;#82AC7C&#39;)) + # 修改颜色 add_risktable() + # 添加风险表格 theme_minimal() + theme(legend.position = &quot;bottom&quot;) cox_model &lt;- coxph(Surv(time, status) ~ sex + ph.ecog, data = lung) ggforest(cox_model) Table Visualization require(formattable) require(DT) df &lt;- data.frame(id = 1:10, name = c(&quot;Bob&quot;, &quot;Ashley&quot;, &quot;James&quot;, &quot;David&quot;, &quot;Jenny&quot;, &quot;Hans&quot;, &quot;Leo&quot;, &quot;John&quot;, &quot;Emily&quot;, &quot;Lee&quot;), age = c(28, 27, 30, 28, 29, 29, 27, 27, 31, 30), grade = c(&quot;C&quot;, &quot;A&quot;, &quot;A&quot;, &quot;C&quot;, &quot;B&quot;, &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;C&quot;, &quot;C&quot;), test1_score = c(8.9, 9.5, 9.6, 8.9, 9.1, 9.3, 9.3, 9.9, 8.5, 8.6), test2_score = c(9.1, 9.1, 9.2, 9.1, 8.9, 8.5, 9.2, 9.3, 9.1, 8.8), final_score = c(9, 9.3, 9.4, 9, 9, 8.9, 9.25, 9.6, 8.8, 8.7), registered = c(TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE), stringsAsFactors = FALSE) formattable(df, list(age = color_tile(&quot;white&quot;, &quot;orange&quot;), grade = formatter(&quot;span&quot;, style = x ~ ifelse(x == &quot;A&quot;, style(color = &quot;green&quot;, font.weight = &quot;bold&quot;), NA) ), area(col = c(test1_score, test2_score)) ~ normalize_bar(&quot;pink&quot;, 0.4), final_score = formatter(&quot;span&quot;, style = x ~ style(color = ifelse(rank(-x) &lt;= 3, &quot;green&quot;, &quot;gray&quot;)), x ~ sprintf(&quot;%.2f (rank: %02d)&quot;, x, rank(-x))), registered = formatter(&quot;span&quot;, style = x ~ style(color = ifelse(x, &quot;green&quot;, &quot;red&quot;)), x ~ icontext(ifelse(x, &quot;ok&quot;, &quot;remove&quot;), ifelse(x, &quot;Yes&quot;,&quot;No&quot;))) ) ) id name age grade test1_score test2_score final_score registered 1 Bob 28 C 8.9 9.1 9.00 (rank: 06) Yes 2 Ashley 27 A 9.5 9.1 9.30 (rank: 03) No 3 James 30 A 9.6 9.2 9.40 (rank: 02) Yes 4 David 28 C 8.9 9.1 9.00 (rank: 06) No 5 Jenny 29 B 9.1 8.9 9.00 (rank: 06) Yes 6 Hans 29 B 9.3 8.5 8.90 (rank: 08) Yes 7 Leo 27 B 9.3 9.2 9.25 (rank: 04) Yes 8 John 27 A 9.9 9.3 9.60 (rank: 01) No 9 Emily 31 C 8.5 9.1 8.80 (rank: 09) No 10 Lee 30 C 8.6 8.8 8.70 (rank: 10) No Heatmap ggplot(airquality, aes(Day, Month, fill = Temp)) + geom_tile() + scale_x_continuous(breaks = seq(1:31)) + theme_bw() + scale_fill_viridis_c(option = &quot;A&quot;) # Example 2 set.seed(1234) mydata &lt;- matrix(rnorm(5*10), ncol = 10) colnames(mydata) &lt;- letters[1:10] heatmap(mydata, # Colv = NA, # Rowv = NA, # hide the clustering main = &quot;heatmap&quot;, col = cm.colors(256)) Compare Two Group Means require(dabestr) mydata &lt;- iris[iris$Species %in% c(&quot;setosa&quot;, &quot;versicolor&quot;), ] %&gt;% mutate(Class = ifelse(Sepal.Length &gt; 5.5, &quot;Long&quot;, &quot;Short&quot;)) mytest &lt;- dabest(mydata, Species, Petal.Width, # Compare Petal.Width for Species idx = c(&quot;setosa&quot;, &quot;versicolor&quot;), # setosa is the control group paired = FALSE) mymean_diff &lt;- mean_diff(mytest) plot(mymean_diff, color.column = Class) Add p-value ggplot(iris, aes(Species, Sepal.Length)) + geom_boxplot() + ggsignif::geom_signif(comparisons = list(c(1, 2)), # group 1 vs group 2 y_position = 8, tip_length = 0) + ggsignif::geom_signif(comparisons = list(c(1, 3)), y_position = 8.6, tip_length = 0) + ggsignif::geom_signif(comparisons = list(c(2, 3)), y_position = 8.3, tip_length = 0) Missing Data in Time Series Soure link library(imputeTS) ggplot_na_distribution(tsAirgap) data_imputation &lt;- na_interpolation(tsAirgap, option = &quot;linear&quot;) # linear interpolation; we can also try spline, stine ggplot_na_imputations(tsAirgap, data_imputation, tsAirgapComplete) State Map with Fill-in Color Example 1 library(usmap) library(sf) d &lt;- us_map(&quot;counties&quot;) %&gt;% dplyr::filter(abbr == &quot;IA&quot;) d$county &lt;- substr(d$county, 1, nchar(d$county) - 7) # remove string &quot; county&quot; d$group &lt;- d$county d &lt;- d %&gt;% arrange(group) database &lt;- data.frame(county = d$county %&gt;% unique(), erosion = rbeta(99, 2, 4) * 14) %&gt;% mutate(erolv = cut(erosion, breaks = c(0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5:13, 100), labels = c(paste0(&quot;C&quot;, 1:19)))) # color code colorvalues &lt;- c(&quot;C1&quot; = &quot;#83858c&quot;, &quot;C2&quot; = &quot;#6d7985&quot;, &quot;C3&quot; = &quot;#62807c&quot;, &quot;C4&quot; = &quot;#4b734c&quot;, &quot;C5&quot; = &quot;#4a734c&quot;, &quot;C6&quot; = &quot;#667c3e&quot;, &quot;C7&quot; = &quot;#748036&quot;, &quot;C8&quot; = &quot;#5f7824&quot;, &quot;C9&quot; = &quot;#978e24&quot;, &quot;C10&quot;= &quot;#977f17&quot;, &quot;C11&quot;= &quot;#90651b&quot;, &quot;C12&quot;= &quot;#8a4c1b&quot;, &quot;C13&quot;= &quot;#82341a&quot;, &quot;C14&quot;= &quot;#781e1a&quot;, &quot;C15&quot;= &quot;#571528&quot;, &quot;C16&quot;= &quot;#3a132b&quot;, &quot;C17&quot;= &quot;#2e1739&quot;, &quot;C18&quot;= &quot;#1a0b1d&quot;, &quot;C19&quot;= &quot;#110a16&quot;) # polygon USS &lt;- lapply(split(d, d$county), function(x) { if(length(table(x$piece)) == 1) { st_polygon(list(cbind(x$x, x$y))) } else { st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y)))) } }) tmp &lt;- st_sfc(USS, crs = usmap_crs()@projargs) tmp &lt;- st_sf(data.frame(database, geometry = tmp)) tmp$centroids &lt;- st_centroid(tmp$geometry) ggplot() + geom_sf(data = tmp) + geom_sf(aes(fill = erolv), color = &quot;white&quot;, data = tmp) + geom_sf_text(aes(label = county, geometry = centroids), colour = &quot;black&quot;, size = 3.5, data = tmp) + scale_fill_manual(values = colorvalues, labels = c(&quot;[0, 0.5)&quot;, &quot;[0.5, 1)&quot;, &quot;[1, 1.5)&quot;, &quot;[1.5, 2)&quot;, &quot;[2, 2.5)&quot;, &quot;[2.5, 3)&quot;, &quot;[3, 3.5)&quot;, &quot;[3.5, 4)&quot;, &quot;[4, 4.5)&quot;, &quot;[4.5, 5)&quot;, &quot;[5, 6)&quot;, &quot;[6,7)&quot;, &quot;[7, 8)&quot;, &quot;[8, 9)&quot;, &quot;[9, 10)&quot;, &quot;[10, 11)&quot;, &quot;[11, 12)&quot;, &quot;[12, 13)&quot;, &quot;&gt;= 13&quot;)) + # change legend names and colors ggtitle(&quot;Iowa&quot;) + guides(fill = guide_legend(title = NULL)) + # remove legend title theme_void() + theme(plot.title = element_text(hjust = 0.5)) Example 2 (Add extra polygons) library(usmap) library(sf) huc8 &lt;- readRDS(&quot;data/huc8.rds&quot;) d &lt;- us_map(&quot;counties&quot;) %&gt;% dplyr::filter(abbr == &quot;IA&quot;) d$county &lt;- substr(d$county, 1, nchar(d$county) - 7) # remove string &quot; county&quot; d$group &lt;- d$county d &lt;- d %&gt;% arrange(group) set.seed(123) database &lt;- data.frame(county = d$county %&gt;% unique(), countyid = 1:99, num = 0) for(i in 1:99) { database$num[i] &lt;- sample(c(0, round(100 * rbeta(1, 2, 10))), 1) } database &lt;- database %&gt;% mutate(numrange = cut(num, breaks = c(-1, 1, 3, 10, 20, 300), labels = c(paste0(&quot;C&quot;, 1:5)))) colorvalues &lt;- c(&quot;C1&quot; = &quot;#FFFFFF&quot;, &quot;C2&quot; = &quot;#e7f9e0&quot;, &quot;C3&quot; = &quot;#d0f3c1&quot;, &quot;C4&quot; = &quot;#a1e784&quot;, &quot;C5&quot; = &quot;#5bd629&quot;) # polygon USS &lt;- lapply(split(d, d$county), function(x) { if(length(table(x$piece)) == 1) { st_polygon(list(cbind(x$x, x$y))) } else { st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y)))) } }) tmp &lt;- st_sfc(USS, crs = usmap_crs()@projargs) tmp &lt;- st_sf(data.frame(database, geometry = tmp)) tmp$centroids &lt;- st_centroid(tmp$geometry) huc8$centroids &lt;- st_centroid(huc8$geometry) ggplot() + geom_sf(data = tmp, aes(fill = numrange), color = &quot;grey&quot;) + geom_sf(data = huc8, color = &quot;#1660CF&quot;, fill = &quot;#FFFFFF00&quot;) + geom_sf_text(aes(label = SUBBASIN, geometry = centroids), colour = &quot;#0563F0&quot;, size = 2.5, data = huc8, fontface = &quot;bold&quot;) + scale_fill_manual(values = colorvalues, labels = c(&quot;0&quot;, &quot;1 ~ 3&quot;, &quot;4 ~ 10&quot;, &quot;11 ~ 20&quot;, &quot;&gt;20&quot;)) + guides(fill = guide_legend(title = &quot;Count&quot;)) + theme_void() + theme(plot.title = element_text(hjust = 0.5), legend.position=&quot;bottom&quot;) Example 3 (Polygon Clusters) library(usmap) library(sf) library(survey) data(api) d &lt;- us_map(&quot;counties&quot;) %&gt;% dplyr::filter(abbr == &quot;CA&quot;) d$county &lt;- substr(d$county, 1, nchar(d$county) - 7) d$group &lt;- d$county # combine some counties together d$group[d$county %in% c(&quot;Del Norte&quot;, &quot;Trinity&quot;)] &lt;- &quot;Humboldt&quot; d$group[d$county %in% c(&quot;Siskiyou&quot;, &quot;Modoc&quot;, &quot;Lassen&quot;)] &lt;- &quot;Shasta&quot; d$group[d$county %in% c(&quot;Lake&quot;)] &lt;- &quot;Mendocino&quot; d$group[d$county %in% c(&quot;Tehama&quot;, &quot;Glenn&quot;, &quot;Colusa&quot;, &quot;Yuba&quot;, &quot;Sierra&quot;, &quot;Plumas&quot;)] &lt;- &quot;Butte&quot; d$group[d$county %in% c(&quot;Sutter&quot;, &quot;Nevada&quot;)] &lt;- &quot;Placer&quot; d$group[d$county %in% c(&quot;Napa&quot;)] &lt;- &quot;Yolo&quot; d$group[d$county %in% c(&quot;Amador&quot;)] &lt;- &quot;Sacramento&quot; d$group[d$county %in% c(&quot;Calaveras&quot;)] &lt;- &quot;San Joaquin&quot; d$group[d$county %in% c(&quot;Tuolumne&quot;, &quot;Alpine&quot;, &quot;Mono&quot;, &quot;Mariposa&quot;)] &lt;- &quot;Stanislaus&quot; d$group[d$county %in% c(&quot;Kings&quot;, &quot;Madera&quot;)] &lt;- &quot;Fresno&quot; d$group[d$county %in% c(&quot;Inyo&quot;)] &lt;- &quot;San Bernardino&quot; d$group[d$county %in% c(&quot;San Benito&quot;)] &lt;- &quot;Monterey&quot; USS &lt;- lapply(split(d, d$county), function(x) { if(length(table(x$piece)) == 1) { st_polygon(list(cbind(x$x, x$y))) } else { st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y)))) } }) USSgroup &lt;- list() mygroup &lt;- unique(d$group) for(i in 1:length(mygroup)) { element &lt;- d %&gt;% dplyr::filter(group == mygroup[i]) %&gt;% &quot;$&quot;(county) %&gt;% unique() if(length(element) == 1) { USSgroup[[i]] &lt;- USS[element][[1]] } else { tmp &lt;- st_union(USS[element[1]][[1]], USS[element[2]][[1]]) if(length(element) &gt; 2) for(j in 3:length(element)) { tmp &lt;- st_union(tmp, USS[element[j]][[1]]) } USSgroup[[i]] &lt;- tmp } } names(USSgroup) &lt;- mygroup # school data: data(api) df &lt;- apipop %&gt;% group_by(cname) %&gt;% summarise(num = n()) %&gt;% add_row(., cname = &quot;Alpine&quot;, num = 0) %&gt;% arrange(cname) %&gt;% &quot;colnames&lt;-&quot;(c(&quot;county&quot;, &quot;num&quot;)) df$group &lt;- df$county df$group[df$county %in% c(&quot;Del Norte&quot;, &quot;Trinity&quot;)] &lt;- &quot;Humboldt&quot; df$group[df$county %in% c(&quot;Siskiyou&quot;, &quot;Modoc&quot;, &quot;Lassen&quot;)] &lt;- &quot;Shasta&quot; df$group[df$county %in% c(&quot;Lake&quot;)] &lt;- &quot;Mendocino&quot; df$group[df$county %in% c(&quot;Tehama&quot;, &quot;Glenn&quot;, &quot;Colusa&quot;, &quot;Yuba&quot;, &quot;Sierra&quot;, &quot;Plumas&quot;)] &lt;- &quot;Butte&quot; df$group[df$county %in% c(&quot;Sutter&quot;, &quot;Nevada&quot;)] &lt;- &quot;Placer&quot; df$group[df$county %in% c(&quot;Napa&quot;)] &lt;- &quot;Yolo&quot; df$group[df$county %in% c(&quot;Amador&quot;)] &lt;- &quot;Sacramento&quot; df$group[df$county %in% c(&quot;Calaveras&quot;)] &lt;- &quot;San Joaquin&quot; df$group[df$county %in% c(&quot;Tuolumne&quot;, &quot;Alpine&quot;, &quot;Mono&quot;, &quot;Mariposa&quot;)] &lt;- &quot;Stanislaus&quot; df$group[df$county %in% c(&quot;Kings&quot;, &quot;Madera&quot;)] &lt;- &quot;Fresno&quot; df$group[df$county %in% c(&quot;Inyo&quot;)] &lt;- &quot;San Bernardino&quot; df$group[df$county %in% c(&quot;San Benito&quot;)] &lt;- &quot;Monterey&quot; dfgroup &lt;- df %&gt;% group_by(group) %&gt;% summarise(num = sum(num)) CA &lt;- st_sfc(USS, crs = usmap_crs()@projargs) CA &lt;- st_sf(data.frame(df, geometry = CA)) CA$centroids &lt;- st_centroid(CA$geometry) CAgroup &lt;- st_sfc(USSgroup, crs = usmap_crs()@projargs) CAgroup &lt;- st_sf(data.frame(dfgroup, geometry = CAgroup)) CAgroup$centroids &lt;- st_centroid(CAgroup$geometry) # show the number of schools in each county group ggplot() + geom_sf(data = CA) + geom_sf(aes(fill = group, alpha = 0.4), color = &quot;white&quot;, data = CAgroup) + geom_sf_text(aes(label = num, geometry = centroids), colour = &quot;black&quot;, size = 4.5, data = CAgroup) + # scale_fill_manual(values = c(&quot;#67b5e3&quot;, &quot;#ffada2&quot;,&quot;#1155b6&quot;, # &quot;#ed4747&quot;, &quot;#cccccc&quot;), guide = guide_none()) + theme_void() + theme(legend.position=&#39;none&#39;) Example 4 (Provide Legend with different patterns) library(usmap) library(sf) d &lt;- us_map(&quot;counties&quot;) %&gt;% dplyr::filter(abbr == &quot;IA&quot;) d$county &lt;- substr(d$county, 1, nchar(d$county) - 7) d$group &lt;- d$county d &lt;- d %&gt;% arrange(group) set.seed(12345) database &lt;- data.frame(county = d$county %&gt;% unique(), Mul = rnorm(99, mean = 0, sd = 2)) database$Mul[database$Mul &gt; 6] &lt;- 6 database$Mul[database$Mul &lt; -6] &lt;- -6 database &lt;- database %&gt;% mutate(MulLv = cut(Mul, breaks = c(-6, -3, -2, -1.5, -1, -0.5, -0.1, 0.1, 0.5, 1, 1.5, 2, 3, 6), labels = c(paste0(&quot;B&quot;, 6:1), &quot;N&quot;, paste0(&quot;R&quot;, 1:6)))) colorvalues &lt;- c(c(&quot;B6&quot; = &quot;#0000ff&quot;, &quot;B5&quot; = &quot;#3737f1&quot;, &quot;B4&quot; = &quot;#4a4aec&quot;, &quot;B3&quot; = &quot;#5c5ce7&quot;, &quot;B2&quot; = &quot;#8181de&quot;, &quot;B1&quot; = &quot;#a6a6d5&quot;, &quot;N&quot; = &quot;#FFFFFF&quot;), c(&quot;R6&quot; = &quot;#ff0000&quot;, &quot;R5&quot; = &quot;#f13737&quot;, &quot;R4&quot; = &quot;#ec4a4a&quot;, &quot;R3&quot; = &quot;#e75c5c&quot;, &quot;R2&quot; = &quot;#de8181&quot;, &quot;R1&quot; = &quot;#d5a6a6&quot;)[6:1]) USS &lt;- lapply(split(d, d$county), function(x) { if(length(table(x$piece)) == 1) { st_polygon(list(cbind(x$x, x$y))) } else { st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y)))) } }) tmp &lt;- st_sfc(USS, crs = usmap_crs()@projargs) tmp &lt;- st_sf(data.frame(database, geometry = tmp)) tmp$centroids &lt;- st_centroid(tmp$geometry) g4 &lt;- ggplot() + geom_sf(data = tmp) + geom_sf_pattern(aes(fill = MulLv, pattern = MulLv), color = &quot;black&quot;, data = tmp, pattern_key_scale_factor = 0.5) + geom_sf_text(aes(label = county, geometry = centroids), colour = &quot;black&quot;, size = 3, data = tmp) + scale_fill_manual(values = colorvalues, labels = c(&quot; &gt;= 3&quot;, &quot;[2, 3)&quot;, &quot;[1.5, 2)&quot;, &quot;[1, 1.5)&quot;, &quot;[0.5, 1)&quot;, &quot;[0.1, 0.5)&quot;, &quot;[-0.1, 0.1)&quot;, &quot;[-0.5, -0.1)&quot;, &quot;[-1, -0.5)&quot;, &quot;[-1.5, -1)&quot;, &quot;[-2, -1.5)&quot;, &quot;[-3, -2)&quot;, &quot;&lt;= -3&quot;)[13:1]) + scale_pattern_manual(values = c(rep(&quot;stripe&quot;, 6), rep(&quot;none&quot;, 7)), guide = &quot;none&quot;) + guides(fill = guide_legend(title = NULL, override.aes = list(pattern = c(rep(&quot;stripe&quot;, 6), rep(&quot;none&quot;, 7))))) + theme_void() + theme(plot.title = element_text(hjust = 0.5), legend.text = element_text(size=10)) g4 Animation plot invisible(capture.output( lapply(c(&quot;sf&quot;, &quot;usmap&quot;, &quot;gganimate&quot;, &quot;gifski&quot;), require, character.only = TRUE) )) rawd &lt;- us_map(&quot;counties&quot;) %&gt;% dplyr::filter(abbr == &quot;IA&quot;) rawd$county &lt;- substr(rawd$county, 1, nchar(rawd$county) - 7) rawd$group &lt;- rawd$county d &lt;- rawd %&gt;% arrange(group) database &lt;- data.frame(county = rep(d$county %&gt;% unique(), 20), year = rep(2001:2020, each = 99), Value = round(rbeta(99 * 20, 2, 20) * 100, 1)) %&gt;% mutate(level = cut(Value, breaks = c(0, 3, 5, 7, 9, 100), labels = c(&quot;VeryLow&quot;, &quot;Low&quot;, &quot;Medium&quot;, &quot;High&quot;, &quot;VeryHigh&quot;))) colorvalues &lt;- c(&quot;VeryHigh&quot; = &quot;#ed4747&quot;, &quot;High&quot; = &quot;#ffada2&quot;, &quot;Medium&quot; = &quot;#cccccc&quot;, &quot;Low&quot; = &quot;#67b5e3&quot;, &quot;VeryLow&quot; = &quot;#1155b6&quot;) database &lt;- database %&gt;% arrange(year, county) USS &lt;- lapply(split(d, d$county), function(x) { if(length(table(x$piece)) == 1) { st_polygon(list(cbind(x$x, x$y))) } else { st_multipolygon(list(lapply(split(x, x$piece), function(y) cbind(y$x, y$y)))) } }) spdata &lt;- st_sfc(USS, crs = usmap_crs()@projargs) tmp &lt;- data.frame() for(yr in 2001:2020) { tmp &lt;- rbind(tmp, st_sf(data.frame(database %&gt;% dplyr::filter(year == yr), geometry = spdata))) } tmp$centroids &lt;- st_centroid(tmp$geometry) tmp &lt;- cbind(tmp, do.call(rbind, st_geometry(tmp$centroids)) %&gt;% as_tibble() %&gt;% setNames(c(&quot;lon&quot;,&quot;lat&quot;))) originplot = ggplot() + geom_sf(aes(fill = level, alpha = 0.4), color = &quot;white&quot;, data = tmp) + scale_fill_manual(values = colorvalues, guide = guide_none()) + theme_void() + theme(legend.position=&#39;none&#39;, plot.title = element_text(hjust = 0.5)) animateplot = originplot + geom_text(aes(y = lat, x = lon, label = Value), colour = &quot;black&quot;, size = 4.5, data = tmp) + geom_text(data = tmp, aes(x = median(lon), y = min(lat) - abs(max(lat) - min(lat))/4, label = paste(&quot;UR In&quot;, &quot;Iowa&quot;, &quot;In&quot;, year)), colour = &quot;black&quot;, size = 5) + transition_states(states = year) animate(animateplot, renderer = gifski_renderer(), fps = 5, duration = 10) Dumbbell Chart library(ggalt) library(hrbrthemes) mydata &lt;- data.frame(type = LETTERS[1:6], pre = c(20, 40, 10, 30, 50, 60), post = c(70, 50, 30, 60, 80, 80)) ggplot(mydata, aes(y = type, x = pre, xend = post)) + geom_dumbbell(size = 3, colour = &quot;grey85&quot;, # 连接两点的条带颜色 colour_x = &quot;firebrick&quot;, # pre的颜色 colour_xend = &quot;forestgreen&quot;, # post的颜色 dot_guide = TRUE, dot_guide_size = 0.5) + labs(x = &quot;&quot;, y = &quot;&quot;, title = &quot;Dumbbell charts&quot;) + theme_ipsum() + # from hrbrthemes package theme(panel.grid.major.y = element_blank()) Encircle Points ggplot(iris, aes(Sepal.Length, Sepal.Width)) + geom_point() + geom_encircle(data = subset(iris, Sepal.Width &lt; 2.5 &amp; Sepal.Length &gt; 5.5), s_shape = 0) + # encircle points geom_point(data = subset(iris, Sepal.Width &lt; 2.5 &amp; Sepal.Length &gt; 5.5), # mark as blue colour = &quot;steelblue&quot;, size = 2.5) "],["r-dt-table.html", "Chapter 3 R DT Table", " Chapter 3 R DT Table "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
