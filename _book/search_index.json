[["index.html", "R Table &amp; Plot Gallery About", " R Table &amp; Plot Gallery Hao Sun 2022-11-03 About This bookdown includes some interesting table and figure examples. It can be used as a manual of ggplot2, DT, plotly. "],["notes-for-ggplot2.html", "Chapter 1 Notes for ggplot2", " Chapter 1 Notes for ggplot2 stat_function: add function curve stat_function(color = &#39;blue&#39;, fun=dunif, args=list(0,1),size=1.2) geom_segment: segment plot ggplot(d2, aes(x = lower, #横向线段 xend = upper, y = county, yend = county))+ geom_segment(lwd=1, alpha=0.5) + labs(x=&#39;mean&#39;, y=&quot;county&quot;, title=&#39;95% Credible Intervals&#39;) + scale_color_brewer(palette=&#39;Set1&#39;) + scale_y_reverse() + theme_bw() Remark: change segment line type, color and width: - scale_linetype_manual(values=c(\"twodash\", \"dotted\")) #（\"solid\", \"twodash\", \"dotted\", \"longdash\", \"dotdash\", \"dashed\", \"blank\") - scale_color_manual(values=c('#999999','#E69F00')) - scale_size_manual(values=c(1, 1.5)) theme: theme(legend.position='none'): hide legend, axis.title.y = element_blank(): remove y axis name (or ylab()) axis.text.x = element_text(angle = 45): adjust x axis text angle plot.title = element_text(hjust = 0.5): center title text=element_text(size=15): change font size use base_size = 15 in theme_xx() use family = \"xxx\" to change font family ggpubr::arrange(p1, p2, ..., ncol = ): plot multiple ggplots in one figure Or gridExtra::grid.arrange(..., ncol = ) Or require(cowplot) myplots = vector(&quot;list&quot;, n) myplot[[i]]&lt;- ggplot(...) plot_grid(plotlist=myplots) Or require(grid) grid.newpage() #新建图表版面 pushViewport(viewport(layout = grid.layout(2,2))) #将版面分成2*2矩阵 vplayout &lt;- function(x,y){viewport(layout.pos.row = x, layout.pos.col = y)} print(chart3, vp = vplayout(1,1:2)) #将（1,1)和(1,2)的位置画图chart3 print(chart2, vp = vplayout(2,1)) #将(2,1)的位置画图chart2 print(chart1 , vp = vplayout(2,2)) #将（2,2)的位置画图chart1 scale_y_log10(): tale log of y axis geom_hline(), geom_vline(), geom_abline geom_hline(yintercept=25, color=&quot;orange&quot;, size=1) + geom_vline(xintercept=3, color=&quot;orange&quot;, size=1 geom_errorbar(): boxplot or scatterplot add confidence interval geom_errorbar(aes(ymin = mean_gain-1.96*sd_gain, ymax = mean_gain+1.96*sd_gain, colour = Diet), data = ChickError) forcats::fct_inorder: Reorder factor levels by first appearance, frequency, or numeric order a = factor(rep(c(&quot;Roads&quot;, &quot;Canals&quot;, &quot;Early railways&quot;, &quot;Railways&quot;), each = 3)) a %&gt;% forcats::fct_inorder() %&gt;% levels() ## [1] &quot;Roads&quot; &quot;Canals&quot; &quot;Early railways&quot; &quot;Railways&quot; "],["r-plot-gallery.html", "Chapter 2 R plot gallery", " Chapter 2 R plot gallery Contents Multiple 95% Confidence Intervals Pirate Plot Beeswarm Plot Bar Plot Multi-row x-axis labels Calender Table Visualization Heatmap Compare Two Group Means Add p-value Multiple 95% Confidence Intervals data.frame(value = rnorm(12, mean = 0, sd = 0.05)) %&gt;% mutate(lower = value - runif(12, 0, 0.4), upper = value + runif(12, 0, 0.4), REG = rep(c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;), 3), est = mean(value), index = rep(1:3, each = 4)) %&gt;% ggplot(aes(x = lower, xend = upper, y = index + rep((0:(length(unique(REG))-1))/10, 3), yend = index + rep((0:(length(unique(REG))-1))/10, 3), color = REG)) + geom_segment(lwd = 1, alpha = 0.5) + scale_color_brewer(palette = &quot;Set1&quot;) + labs(y = &quot;&quot;, x = &quot;Reduction Rate&quot;) + scale_y_continuous(breaks = 1:3, labels = c(&quot;method 1&quot;, &quot;method 2&quot;, &quot;method 3&quot;)) + geom_segment(aes(x = est, xend = est, y = index - 0.1, yend = index + (length(unique(REG)))/10)) + geom_point(aes(x = value, y = index + rep((0:(length(unique(REG))-1))/10, 3))) + theme_bw() + ggtitle(&quot;Reduction Rate of Treatment Compared With Placebo&quot;) + theme(plot.title = element_text(hjust = 0.5), text= element_text(size = 15)) Pirate Plot require(yarrr) yarrr::pirateplot(weight ~ Diet, data = ChickWeight, main = &quot;Pirate plot&quot;, inf.method = &quot;ci&quot;, theme = 2, # change theme, from 1 to 4 pal = &quot;decision&quot;, # use piratepal(palette = &quot;all&quot;) to check available palettes bar.f.o = 0.2) Beeswarm plot require(ggbeeswarm) ggplot(iris, aes(Species, Sepal.Length, colour = Species)) + geom_violin(width = 0.5) + geom_beeswarm() + theme_classic() + scale_color_brewer(palette = &quot;Set1&quot;) Bar Plot dat2 &lt;- data.frame( categ = rep(c(&quot;Roads&quot;, &quot;Canals&quot;, &quot;Early railways&quot;, &quot;Railways&quot;), each = 3) %&gt;% forcats::fct_inorder(), group = rep(c(&quot;Maximum&quot;, &quot;Mean&quot;, &quot;Minimum&quot;), 4), fill = as.character(c(1,1,1,1,1,1, 2, 1, 3, 1,1,1)), pattern = c(rep(&quot;N&quot;, 6), &quot;D&quot;, rep(&quot;N&quot;, 5)), record = c(NA, 5, NA, 11.5, 3.77, 1.4, 14.3, 6, 2.3, NA, 1.4, NA) ) dat2 %&gt;% dplyr::filter(is.na(record) == FALSE) %&gt;% ggplot() + geom_bar_pattern(aes(x = categ, y = record, fill = fill, group = group, pattern = pattern), width=0.4, position = position_dodge2(width=0.5, preserve = &quot;single&quot;), color = &quot;black&quot;, stat = &quot;identity&quot;, pattern_density = 1.0, pattern_fill = &#39;grey&#39;, pattern_key_scale_factor = 0.5) + scale_fill_manual(values = c(&quot;#1B4264&quot;,&quot;#D3CEC7&quot;,&quot;#5A6065&quot;), labels = c(&quot;Mean&quot;, &quot;Maximum&quot;, &quot;Minimum&quot;)) + scale_pattern_manual(values = c(D = &quot;stripe&quot;, N = &quot;none&quot;), guide = &quot;none&quot;) + guides(fill = guide_legend(override.aes = list(pattern = &quot;none&quot;), title = NULL)) + scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10, 12, 14)) + labs(x = NULL, y = &quot;Pence&quot;) + theme_bw() + theme(text = element_text(size = 15), axis.text.y = element_text(angle = 30, hjust = 1)) getrank &lt;- function(data) { group &lt;- nrow(data)/4 rankvalue &lt;- NULL for(i in 1:group) { rankvalue &lt;- c(rankvalue, rank(ifelse(data$stat[i*4] %in% c(&quot;n_over&quot;, &quot;risk&quot;), 1, -1) * data$value[((i-1)*4+1):(i*4)], ties.method = &quot;min&quot;)) } data$rank &lt;- as.character(rankvalue) return(data) } data.frame(curve = rep(1:4, each = 4), design = rep(paste(&quot;D&quot;, 1:4, sep = &quot;&quot;), 4), correct = runif(16, max = 100), OBD = runif(16, max = 100), noOBD = runif(16, max = 100), risk = runif(16, max = 100)) %&gt;% gather(key = &quot;stat&quot;, value = &quot;value&quot;, -curve, -design) %&gt;% getrank() %&gt;% mutate_if(is.numeric, ~round(., 1)) %&gt;% mutate(ifbest = as.character(rank == &quot;1&quot;)) %&gt;% ggplot(aes(x = curve, y = value, fill = design, pattern = ifbest)) + geom_bar_pattern( width=0.75, position = position_dodge2(width=0.7, preserve = &quot;single&quot;), color = &quot;black&quot;, stat = &quot;identity&quot;, pattern_fill = NA, pattern_density = 1.0, pattern_key_scale_factor = 0.5) + scale_fill_manual(values = c(&quot;#EC8F76&quot;,&quot;#37BAEB&quot;, &quot;#A2E265&quot;,&quot;#E8EC76&quot; ), labels = c(&quot;D1&quot;, &quot;D2&quot;, &quot;D3&quot;, &quot;D4&quot;)) + scale_pattern_manual(values = c(&quot;TRUE&quot; = &quot;stripe&quot;, &quot;FALSE&quot; = &quot;none&quot;), guide = &quot;none&quot;) + guides(fill = guide_legend(override.aes = list(pattern = &quot;none&quot;), title = NULL)) + facet_wrap(~factor(stat, levels = c(&quot;OBD&quot;, &quot;noOBD&quot;, &quot;correct&quot;, &quot;risk&quot;)), nrow = 2, scales = &quot;free&quot;) + geom_text(aes(label=value), position=position_dodge(width=0.7), vjust=-0.25, size = 3) + theme_bw() Multi-row x-axis labels set.seed(1) df=data.frame(year=rep(2009:2013,each=4), quarter=rep(c(&quot;Q1&quot;,&quot;Q2&quot;,&quot;Q3&quot;,&quot;Q4&quot;),5), sales=40:59+rnorm(20,sd=5)) ggplot(data = df, aes(x = interaction(year, quarter, lex.order = TRUE), y = sales, group = 1)) + geom_line(colour = &quot;blue&quot;) + annotate(geom = &quot;text&quot;, x = seq_len(nrow(df)), y = 34, label = df$quarter, size = 4) + annotate(geom = &quot;text&quot;, x = 2.5 + 4 * (0:4), y = 32, label = unique(df$year), size = 6) + coord_cartesian(ylim = c(35, 65), expand = FALSE, clip = &quot;off&quot;) + theme_bw() + theme(plot.margin = unit(c(1, 1, 4, 1), &quot;lines&quot;), axis.title.x = element_blank(), axis.text.x = element_blank(), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank()) ggplot(mtcars, aes(wt, mpg)) + geom_point() + labs(x = paste0(&quot;&lt;span style=&#39;font-size: 11pt&#39;&gt;This is the axis of&lt;/span&gt;&lt;br&gt; &lt;span style=&#39;font-size: 7pt&#39;&gt;wt&lt;/span&gt;&quot;), y = paste0(&quot;&lt;span style=&#39;font-size: 11pt&#39;&gt;This is the axis of&lt;/span&gt;&lt;br&gt; &lt;span style=&#39;font-size: 7pt&#39;&gt;mpg&lt;/span&gt;&quot;)) + theme(axis.title.x = ggtext::element_markdown(), axis.title.y = ggtext::element_markdown()) Calendar require(sugrrants) require(lubridate) data.frame(date = lubridate::ymd(strtrim(seq(ISOdate(2017,10,1), ISOdate(2018,2,28), &quot;DSTday&quot;),10)), # or as.Date(&quot;2017-10-1&quot;) + 0:150 n = sample(1:100, size = 151, replace = T)) %&gt;% sugrrants::frame_calendar(x = 1, y = 1, date = date) %&gt;% ggplot(aes(x = .x, y = .y)) + ggtitle(&quot;Daily sold units&quot;) + theme_bw() + theme(legend.position = &quot;bottom&quot;, plot.title = element_text(hjust = 0.5)) + geom_tile(aes(x = .x+(1/13)/2, y = .y+(1/9)/2, fill = n), colour = &quot;grey50&quot;) + scale_fill_distiller(name = &quot;&quot;, palette = &quot;RdYlBu&quot;) -&gt; p2.sale sugrrants::prettify(p2.sale, label = c(&quot;label&quot;, &quot;text&quot;, &quot;text2&quot;)) # label: month and year; text: weekday at the bottom; text2: day of month Correlation Plot require(corrplot) cor(mtcars) %&gt;% corrplot::corrplot(., type = &quot;upper&quot;, order = &quot;hclust&quot;) Table Visualization require(formattable) require(DT) df &lt;- data.frame(id = 1:10, name = c(&quot;Bob&quot;, &quot;Ashley&quot;, &quot;James&quot;, &quot;David&quot;, &quot;Jenny&quot;, &quot;Hans&quot;, &quot;Leo&quot;, &quot;John&quot;, &quot;Emily&quot;, &quot;Lee&quot;), age = c(28, 27, 30, 28, 29, 29, 27, 27, 31, 30), grade = c(&quot;C&quot;, &quot;A&quot;, &quot;A&quot;, &quot;C&quot;, &quot;B&quot;, &quot;B&quot;, &quot;B&quot;, &quot;A&quot;, &quot;C&quot;, &quot;C&quot;), test1_score = c(8.9, 9.5, 9.6, 8.9, 9.1, 9.3, 9.3, 9.9, 8.5, 8.6), test2_score = c(9.1, 9.1, 9.2, 9.1, 8.9, 8.5, 9.2, 9.3, 9.1, 8.8), final_score = c(9, 9.3, 9.4, 9, 9, 8.9, 9.25, 9.6, 8.8, 8.7), registered = c(TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE), stringsAsFactors = FALSE) formattable(df, list(age = color_tile(&quot;white&quot;, &quot;orange&quot;), grade = formatter(&quot;span&quot;, style = x ~ ifelse(x == &quot;A&quot;, style(color = &quot;green&quot;, font.weight = &quot;bold&quot;), NA) ), area(col = c(test1_score, test2_score)) ~ normalize_bar(&quot;pink&quot;, 0.4), final_score = formatter(&quot;span&quot;, style = x ~ style(color = ifelse(rank(-x) &lt;= 3, &quot;green&quot;, &quot;gray&quot;)), x ~ sprintf(&quot;%.2f (rank: %02d)&quot;, x, rank(-x))), registered = formatter(&quot;span&quot;, style = x ~ style(color = ifelse(x, &quot;green&quot;, &quot;red&quot;)), x ~ icontext(ifelse(x, &quot;ok&quot;, &quot;remove&quot;), ifelse(x, &quot;Yes&quot;,&quot;No&quot;))) ) ) id name age grade test1_score test2_score final_score registered 1 Bob 28 C 8.9 9.1 9.00 (rank: 06) Yes 2 Ashley 27 A 9.5 9.1 9.30 (rank: 03) No 3 James 30 A 9.6 9.2 9.40 (rank: 02) Yes 4 David 28 C 8.9 9.1 9.00 (rank: 06) No 5 Jenny 29 B 9.1 8.9 9.00 (rank: 06) Yes 6 Hans 29 B 9.3 8.5 8.90 (rank: 08) Yes 7 Leo 27 B 9.3 9.2 9.25 (rank: 04) Yes 8 John 27 A 9.9 9.3 9.60 (rank: 01) No 9 Emily 31 C 8.5 9.1 8.80 (rank: 09) No 10 Lee 30 C 8.6 8.8 8.70 (rank: 10) No Heatmap ggplot(airquality, aes(Day, Month, fill = Temp)) + geom_tile() + scale_x_continuous(breaks = seq(1:31)) + theme_bw() + scale_fill_viridis_c(option = &quot;A&quot;) # Example 2 set.seed(1234) mydata &lt;- matrix(rnorm(5*10), ncol = 10) colnames(mydata) &lt;- letters[1:10] heatmap(mydata, # Colv = NA, # Rowv = NA, # hide the clustering main = &quot;heatmap&quot;, col = cm.colors(256)) Compare Two Group Means require(dabestr) mydata &lt;- iris[iris$Species %in% c(&quot;setosa&quot;, &quot;versicolor&quot;), ] %&gt;% mutate(Class = ifelse(Sepal.Length &gt; 5.5, &quot;Long&quot;, &quot;Short&quot;)) mytest &lt;- dabest(mydata, Species, Petal.Width, # Compare Petal.Width for Species idx = c(&quot;setosa&quot;, &quot;versicolor&quot;), # setosa is the control group paired = FALSE) mymean_diff &lt;- mean_diff(mytest) plot(mymean_diff, color.column = Class) Add p-value ggplot(iris, aes(Species, Sepal.Length)) + geom_boxplot() + ggsignif::geom_signif(comparisons = list(c(1, 2)), # group 1 vs group 2 y_position = 8, tip_length = 0) + ggsignif::geom_signif(comparisons = list(c(1, 3)), y_position = 8.6, tip_length = 0) + ggsignif::geom_signif(comparisons = list(c(2, 3)), y_position = 8.3, tip_length = 0) "],["r-dt-table.html", "Chapter 3 R DT Table", " Chapter 3 R DT Table "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
